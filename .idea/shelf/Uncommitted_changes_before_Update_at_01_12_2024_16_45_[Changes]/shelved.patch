Index: ecosphere/templates/_nav.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n    <div class=\"container-fluid\">\r\n      <a class=\"navbar-brand\" href=\"/\">EcoSphere Numerique</a>\r\n      <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNavDarkDropdown\" aria-controls=\"navbarNavDarkDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div class=\"collapse navbar-collapse\" id=\"navbarNavDarkDropdown\">\r\n        <ul class=\"navbar-nav\">\r\n\r\n\r\n          <li class=\"nav-item dropdown\" style=\"margin-left: 100px\">\r\n            <a class=\"nav-link dropdown-toggle\" href=\"/evaluation/show\" id=\"navbarDarkDropdownMenuLink\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n              Evaluation (Lucas)\r\n            </a>\r\n            <ul class=\"dropdown-menu dropdown-menu-dark\" aria-labelledby=\"navbarDarkDropdownMenuLink\">\r\n              <li><a class=\"dropdown-item\" href=\"#\">Filtrer</a></li>\r\n              <li><a class=\"dropdown-item\" href=\"/evaluation/show\">Evaluation</a></li>\r\n            </ul>\r\n          </li>\r\n\r\n\r\n            <li class=\"nav-item dropdown\" style=\"margin-left: 100px\">\r\n            <a class=\"nav-link dropdown-toggle\" href=\"/seance/show\" id=\"navbarDarkDropdownMenuLink\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n              Seance (Julian)\r\n            </a>\r\n            <ul class=\"dropdown-menu dropdown-menu-dark\" aria-labelledby=\"navbarDarkDropdownMenuLink\">\r\n              <li><a class=\"dropdown-item\" href=\"#\">Filtrer</a></li>\r\n              <li><a class=\"dropdown-item\" href=\"/seance/show\">Seance</a></li>\r\n            </ul>\r\n          </li>\r\n\r\n\r\n            <li class=\"nav-item dropdown\" style=\"margin-left: 100px\">\r\n            <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDarkDropdownMenuLink\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n              Inscription (Serine)\r\n            </a>\r\n            <ul class=\"dropdown-menu dropdown-menu-dark\" aria-labelledby=\"navbarDarkDropdownMenuLink\">\r\n              <li><a class=\"dropdown-item\" href=\"#\">Action</a></li>\r\n              <li><a class=\"dropdown-item\" href=\"#\">Another action</a></li>\r\n              <li><a class=\"dropdown-item\" href=\"#\">Something else here</a></li>\r\n            </ul>\r\n          </li>\r\n\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ecosphere/templates/_nav.html b/ecosphere/templates/_nav.html
--- a/ecosphere/templates/_nav.html	(revision c1d4f63718e325993cf153d3a8f80fb6cfec76bc)
+++ b/ecosphere/templates/_nav.html	(date 1733066620495)
@@ -9,12 +9,12 @@
 
 
           <li class="nav-item dropdown" style="margin-left: 100px">
-            <a class="nav-link dropdown-toggle" href="/evaluation/show" id="navbarDarkDropdownMenuLink" role="button" data-bs-toggle="dropdown" aria-expanded="false">
+            <a class="nav-link dropdown-toggle" href="/evaluation/etat" id="navbarDarkDropdownMenuLink" role="button" data-bs-toggle="dropdown" aria-expanded="false">
               Evaluation (Lucas)
             </a>
             <ul class="dropdown-menu dropdown-menu-dark" aria-labelledby="navbarDarkDropdownMenuLink">
-              <li><a class="dropdown-item" href="#">Filtrer</a></li>
-              <li><a class="dropdown-item" href="/evaluation/show">Evaluation</a></li>
+              <li><a class="dropdown-item" href="/evaluation/etat">État des évaluations</a></li>
+              <li><a class="dropdown-item" href="/evaluation/show"> affichage des Evaluation</a></li>
             </ul>
           </li>
 
@@ -40,7 +40,6 @@
               <li><a class="dropdown-item" href="#">Something else here</a></li>
             </ul>
           </li>
-
         </ul>
       </div>
     </div>
Index: ecosphere/app.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#! /usr/bin/python\r\n# -*- coding:utf-8 -*-\r\nfrom flask import Flask, request, render_template, redirect, url_for, abort, flash\r\n\r\napp = Flask(__name__)\r\napp.config[\"TEMPLATES_AUTO_RELOAD\"] = True\r\napp.secret_key = 'une cle(token) : grain de sel(any random string)'\r\n\r\n\r\nfrom flask import session, g\r\nimport pymysql.cursors\r\n\r\ndef get_db():\r\n    if 'db' not in g:\r\n        g.db =  pymysql.connect(\r\n            host=\"localhost\",                 # à modifier\r\n            user=\"lrequena\",                     # à modifier\r\n            password=\"mdp\",                # à modifier\r\n            database=\"BDD_lrequena\",        # à modifier\r\n            charset='utf8mb4',\r\n            cursorclass=pymysql.cursors.DictCursor\r\n        )\r\n    return g.db\r\n\r\n@app.teardown_appcontext\r\ndef teardown_db(exception):\r\n    db = g.pop('db', None)\r\n    if db is not None:\r\n        db.close()\r\n\r\n@app.route('/')\r\ndef show_layout():\r\n    return render_template('layout.html',methods=['GET'])\r\n\r\n\r\n###evaluation###\r\n@app.route('/evaluation/show', methods=['GET'])\r\ndef show_evaluation():\r\n    #print(types_articles)\r\n    mycursor = get_db().cursor()\r\n    sql = '''SELECT id_evaluation AS id,Animateur.Nom_Animateur,Seance.DateSeance,Participant.Nom_Participant,Note_Seance,Note_Animation\r\n    FROM Evaluation\r\n    INNER JOIN Animateur ON Evaluation.N_Animateur = Animateur.N_Animateur\r\n    INNER JOIN Seance ON Evaluation.idSeance = Seance.id_Seance\r\n    INNER JOIN Participant ON Evaluation.idParticipant = Participant.idParticipant\r\n    ORDER BY id_evaluation;'''\r\n    mycursor.execute(sql)\r\n    evaluations = mycursor.fetchall()\r\n    return render_template('Evaluation/show_evaluation.html', evaluation=evaluations)\r\n\r\n@app.route('/evaluation/delete', methods=['GET'])\r\ndef delete_evaluation():\r\n    print('''suppression d'une evaluation''')\r\n    id = request.args.get('id')\r\n    print(\"une evaluation supprimé, id :\", id)\r\n    message = u'un genre de film supprimé, id : ' + id\r\n    flash(message, 'alert-warning')\r\n\r\n    mycursor = get_db().cursor()\r\n    sql = \"DELETE FROM Evaluation WHERE id_evaluation=%s;\"\r\n    tuple_sql = (id)\r\n    mycursor.execute(sql, tuple_sql)\r\n    get_db().commit()\r\n    return redirect('/evaluation/show')\r\n\r\n@app.route('/evaluation/add', methods=['GET'])\r\ndef add_evaluation():\r\n    mycursor = get_db().cursor()\r\n    sql='''SELECT DISTINCT Animateur.N_Animateur, Animateur.Nom_Animateur\r\nFROM Animateur\r\nLEFT JOIN Evaluation ON Evaluation.N_Animateur = Animateur.N_Animateur;\r\n'''\r\n    mycursor.execute(sql)\r\n    animateur = mycursor.fetchall()\r\n\r\n    sql='''SELECT DISTINCT Seance.id_Seance, Seance.DateSeance\r\n    FROM Seance\r\n    LEFT JOIN Evaluation ON Seance.id_Seance = Seance.id_Seance'''\r\n    mycursor.execute(sql)\r\n    seance = mycursor.fetchall()\r\n\r\n    sql = '''SELECT DISTINCT Participant.idParticipant, Participant.Nom_Participant\r\n        FROM Participant\r\n        LEFT JOIN Evaluation ON Participant.idParticipant = Evaluation.idParticipant'''\r\n    mycursor.execute(sql)\r\n    participant = mycursor.fetchall()\r\n\r\n    return render_template('Evaluation/add_evaluation.html',animateurs=animateur,seances=seance,participants=participant)\r\n\r\n@app.route('/evaluation/add', methods=['POST'])\r\ndef valid_add_evaluation():\r\n    Nom_Animateur = request.form.get('Nom_Animateur', '')\r\n    DateSeance = request.form.get('DateSeance', '')\r\n    Nom_Participant = request.form.get('Nom_Participant', '')\r\n    Note_Seance = request.form.get('Note_Seance', '')\r\n    Note_Animation = request.form.get('Note_Animation', '')\r\n    mycursor = get_db().cursor()\r\n    sql = ''' INSERT INTO Evaluation(id_evaluation,N_Animateur,idSeance,idParticipant,Note_Seance,Note_Animation) VALUES (NULL, %s, %s, %s, %s, %s);'''\r\n    tuple_sql = (Nom_Animateur,DateSeance,Nom_Participant,Note_Seance,Note_Animation)\r\n    mycursor.execute(sql, tuple_sql)\r\n\r\n    get_db().commit()\r\n    message = u'evaluation ajouté , animateur :'+Nom_Animateur,\"date :\"+DateSeance,\"participant :\"+Nom_Participant,\"note de seance :\"+Note_Seance,\"note d'animation\"+Note_Animation\r\n    flash(message, 'alert-success')\r\n    return redirect('/evaluation/show')\r\n\r\n@app.route('/evaluation/edit', methods=['GET'])\r\ndef edit_evaluation():\r\n    id = request.args.get('id')\r\n    mycursor = get_db().cursor()\r\n    sql = '''SELECT id_evaluation, N_Animateur, idSeance, idParticipant, Note_Seance, Note_Animation \r\n    FROM Evaluation \r\n    WHERE id_evaluation = %s'''\r\n    mycursor.execute(sql, (id))\r\n    evaluation = mycursor.fetchone()\r\n    sql = '''SELECT DISTINCT N_Animateur, Nom_Animateur \r\n    FROM Animateur'''\r\n    mycursor.execute(sql)\r\n    animateurs = mycursor.fetchall()\r\n    sql = '''SELECT DISTINCT id_Seance, DateSeance \r\n    FROM Seance'''\r\n    mycursor.execute(sql)\r\n    seances = mycursor.fetchall()\r\n    sql = '''SELECT DISTINCT idParticipant, Nom_Participant \r\n    FROM Participant'''\r\n    mycursor.execute(sql)\r\n    participants = mycursor.fetchall()\r\n    return render_template('Evaluation/edit_evaluation.html',evaluation=evaluation,animateurs=animateurs,seances=seances,participants=participants)\r\n\r\n\r\n@app.route('/evaluation/edit', methods=['POST'])\r\ndef valid_edit_evaluation():\r\n    Nom_Animateur = request.form.get('Nom_Animateur', '')\r\n    DateSeance = request.form.get('DateSeance', '')\r\n    Nom_Participant = request.form.get('Nom_Participant', '')\r\n    Note_Seance = request.form.get('Note_Seance', '')\r\n    Note_Animation = request.form.get('Note_Animation', '')\r\n    id_evaluation = request.form.get('id_evaluation', '')\r\n\r\n    mycursor = get_db().cursor()\r\n    sql = '''UPDATE Evaluation \r\n    SET N_Animateur = %s, idSeance = %s, idParticipant = %s, \r\n    Note_Seance = %s, Note_Animation = %s\r\n    WHERE id_evaluation = %s'''\r\n    tuple_sql = (Nom_Animateur, DateSeance, Nom_Participant, Note_Seance, Note_Animation, id_evaluation)\r\n    mycursor.execute(sql, tuple_sql)\r\n    get_db().commit()\r\n    message = u'evaluation modifier , animateur :'+Nom_Animateur,\"date :\"+DateSeance,\"participant :\"+Nom_Participant,\"note de seance :\"+Note_Seance,\"note d'animation\"+Note_Animation\r\n    flash(message, 'alert-success')\r\n    return redirect('/evaluation/show')\r\n\r\n@app.route('/evaluation/etat', methods=['GET'])\r\ndef show_evaluation_state():\r\n    date_filter = request.args.get('date')\r\n    animateur_filter = request.args.get('animateur')\r\n    mycursor = get_db().cursor()\r\n    sql = '''SELECT AVG(Note_Seance) AS moyenne\r\n    FROM Evaluation\r\n    INNER JOIN Seance ON Evaluation.idSeance = Seance.id_Seance\r\n    WHERE Seance.DateSeance = %s'''\r\n    mycursor.execute(sql, (date_filter,))\r\n    moyenne_note_seance = mycursor.fetchone()['moyenne']\r\n    sql = '''SELECT Animateur.Nom_Animateur, \r\n    AVG(Note_Seance) AS MoyenneNoteSeance, \r\n    AVG(Note_Animation) AS MoyenneNoteAnimation\r\n    FROM Evaluation\r\n    INNER JOIN Animateur ON Evaluation.N_Animateur = Animateur.N_Animateur\r\n    GROUP BY Animateur.Nom_Animateur'''\r\n    mycursor.execute(sql)\r\n    moyenne_note_animateur = {\r\n        row['Nom_Animateur']: {\r\n            'Note_Seance': row['MoyenneNoteSeance'],\r\n            'Note_Animation': row['MoyenneNoteAnimation']\r\n        }\r\n        for row in mycursor.fetchall()\r\n    }\r\n    sql = 'SELECT N_Animateur, Nom_Animateur FROM Animateur'\r\n    mycursor.execute(sql)\r\n    animateurs = mycursor.fetchall()\r\n\r\n    return render_template('etat_evaluation.html',moyenne_note_seance=moyenne_note_seance,moyenne_note_animateur=moyenne_note_animateur,animateurs=animateurs,selected_date=date_filter\r\n    )\r\n\r\n\r\n###Seance###\r\n@app.route('/seance/show', methods=['GET'])\r\ndef show_seance():\r\n    mycursor = get_db().cursor()\r\n    sql = '''SELECT id_Seance AS id,Seance.DateSeance,Seance.PlacesDisponibles,Seance.IDlieu,Seance.id_atelier\r\n    FROM Seance'''\r\n    mycursor.execute(sql)\r\n    seances = mycursor.fetchall()\r\n    return render_template('Seance/show_seance.html', seance=seances)\r\n\r\n@app.route('/seance/add', methods=['GET'])\r\ndef add_seance():\r\n    mycursor = get_db().cursor()\r\n    sql='''SELECT * FROM Seance'''\r\n    mycursor.execute(sql)\r\n    seances = mycursor.fetchall()\r\n\r\n    sql='''SELECT DISTINCT Seance.id_Seance, Seance.DateSeance\r\n    FROM Seance\r\n    LEFT JOIN Evaluation ON Seance.id_Seance = Seance.id_Seance'''\r\n    mycursor.execute(sql)\r\n    seances = mycursor.fetchall()\r\n\r\n    sql = '''SELECT IDlieu, NomLieu FROM Lieu'''\r\n    mycursor.execute(sql)\r\n    lieux = mycursor.fetchall()\r\n\r\n    sql = '''SELECT id_atelier, Nom_Atelier FROM Atelier'''\r\n    mycursor.execute(sql)\r\n    ateliers = mycursor.fetchall()\r\n\r\n    return render_template('Seance/add_seance.html', seance=seances, lieu=lieux, ateliers=ateliers)\r\n\r\n\r\n\r\n@app.route('/seance/add', methods=['POST'])\r\ndef valid_add_seance():\r\n    DateSeance = request.form.get('DateSeance', '')\r\n    PlacesDisponibles = request.form.get('PlacesDisponibles', '')\r\n    IDlieu = request.form.get('id_lieu', '1')\r\n    IDatelier = request.form.get('id_atelier', '1')\r\n    mycursor = get_db().cursor()\r\n    sql = ''' INSERT INTO Seance(id_Seance,DateSeance,PlacesDisponibles,IDlieu,id_atelier) VALUES (NULL, %s, %s, %s, %s);'''\r\n    tuple_sql = (DateSeance,PlacesDisponibles,IDlieu,IDatelier)\r\n    mycursor.execute(sql, tuple_sql)\r\n\r\n    get_db().commit()\r\n    message = u'\"Séance ajoutée ,'\"date :\"+DateSeance,\"nombre de places disponibles :\"+PlacesDisponibles,\"ID du lieu :\"+IDlieu,\"ID de l'atelier\"+IDatelier\r\n    flash(message, 'alert-success')\r\n    return redirect('/seance/show')\r\n\r\n@app.route('/seance/delete', methods=['GET'])\r\ndef delete_seance():\r\n    print('''suppression d'une seance''')\r\n    id = request.args.get('id')\r\n    print(\"une séance supprimée, id :\", id)\r\n    message = u'une séance supprimée, id : ' + id\r\n    flash(message, 'alert-warning')\r\n\r\n    mycursor = get_db().cursor()\r\n    sql = \"DELETE FROM Seance WHERE id_seance=%s;\"\r\n    tuple_sql = (id)\r\n    mycursor.execute(sql, tuple_sql)\r\n    get_db().commit()\r\n    return redirect('/seance/show')\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ecosphere/app.py b/ecosphere/app.py
--- a/ecosphere/app.py	(revision c1d4f63718e325993cf153d3a8f80fb6cfec76bc)
+++ b/ecosphere/app.py	(date 1733067507955)
@@ -150,15 +150,25 @@
     return redirect('/evaluation/show')
 
 @app.route('/evaluation/etat', methods=['GET'])
-def show_evaluation_state():
-    date_filter = request.args.get('date')
-    animateur_filter = request.args.get('animateur')
+def etat_evaluation():
+    date_filtre = request.args.get('date')
+    animateur_filtre = request.args.get('animateur')
+    mycursor = get_db().cursor()
+    sql_dates = '''SELECT DISTINCT DateSeance FROM Seance ORDER BY DateSeance'''
+    mycursor.execute(sql_dates)
+    dates = mycursor.fetchall()
+    sql = '''SELECT AVG(Note_Seance) AS moyenne
+    FROM Evaluation
+    INNER JOIN Seance ON Evaluation.idSeance = Seance.id_Seance
+    WHERE Seance.DateSeance = %s'''
+    mycursor.execute(sql, (date_filtre,))
+    moyenne_note_seance = mycursor.fetchone()['moyenne']
     mycursor = get_db().cursor()
     sql = '''SELECT AVG(Note_Seance) AS moyenne
     FROM Evaluation
     INNER JOIN Seance ON Evaluation.idSeance = Seance.id_Seance
     WHERE Seance.DateSeance = %s'''
-    mycursor.execute(sql, (date_filter,))
+    mycursor.execute(sql, (date_filtre,))
     moyenne_note_seance = mycursor.fetchone()['moyenne']
     sql = '''SELECT Animateur.Nom_Animateur, 
     AVG(Note_Seance) AS MoyenneNoteSeance, 
@@ -178,9 +188,7 @@
     mycursor.execute(sql)
     animateurs = mycursor.fetchall()
 
-    return render_template('etat_evaluation.html',moyenne_note_seance=moyenne_note_seance,moyenne_note_animateur=moyenne_note_animateur,animateurs=animateurs,selected_date=date_filter
-    )
-
+    return render_template('Evaluation/etat_evaluation.html',moyenne_note_seance=moyenne_note_seance,moyenne_note_animateur=moyenne_note_animateur,animateurs=animateurs,dates=dates,selected_date=date_filtre)
 
 ###Seance###
 @app.route('/seance/show', methods=['GET'])
